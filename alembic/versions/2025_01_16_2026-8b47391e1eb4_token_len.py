"""token len

Revision ID: 8b47391e1eb4
Revises: 529f7c22ec85
Create Date: 2025-01-16 20:26:31.771742

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8b47391e1eb4"
down_revision: Union[str, None] = "529f7c22ec85"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_clientuuids_id", table_name="clientuuids")
    op.drop_table("clientuuids")
    op.alter_column(
        "jwtokens",
        "token",
        existing_type=sa.VARCHAR(length=200),
        type_=sa.String(length=600),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "jwtokens",
        "token",
        existing_type=sa.String(length=600),
        type_=sa.VARCHAR(length=200),
        existing_nullable=False,
    )
    op.create_table(
        "clientuuids",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "client_uuid", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "ip_address", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "device_type", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="clientuuids_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="clientuuids_pkey"),
        sa.UniqueConstraint("client_uuid", name="clientuuids_client_uuid_key"),
    )
    op.create_index("ix_clientuuids_id", "clientuuids", ["id"], unique=True)
    # ### end Alembic commands ###
