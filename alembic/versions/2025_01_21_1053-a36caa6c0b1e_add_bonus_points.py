"""add bonus points

Revision ID: a36caa6c0b1e
Revises: e9dad838149e
Create Date: 2025-01-21 10:53:03.525665

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a36caa6c0b1e"
down_revision: Union[str, None] = "e9dad838149e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "userpointsbalances",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("balance", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_userpointsbalances_id"),
        "userpointsbalances",
        ["id"],
        unique=True,
    )
    op.create_table(
        "userpointstransactions",
        sa.Column("wallet_id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("CREDIT", "DEBIT", name="pointstransactiontype"),
            nullable=False,
        ),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "expires_at",
            sa.DateTime(),
            server_default=sa.text("NOW() + INTERVAL '3 MONTHS'"),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"], ["userpointsbalances.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_userpointstransactions_id"),
        "userpointstransactions",
        ["id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_userpointstransactions_id"),
        table_name="userpointstransactions",
    )
    op.drop_table("userpointstransactions")
    op.drop_index(
        op.f("ix_userpointsbalances_id"), table_name="userpointsbalances"
    )
    op.drop_table("userpointsbalances")
    # ### end Alembic commands ###
